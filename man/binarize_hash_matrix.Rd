% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/hash_matrix_analysis.R
\name{binarize_hash_matrix}
\alias{binarize_hash_matrix}
\title{Binarize a matrix of hash counts}
\usage{
binarize_hash_matrix(
  mat,
  valid_htos = NULL,
  use_median_cut = FALSE,
  min_cut = 10,
  cutoff_vals = NULL,
  expect_equal_loading = TRUE,
  max_tries = 5
)
}
\arguments{
\item{mat}{A matrix or sparse matrix of hash tag oligo counts. Rows must be hashes, columns must be cells}

\item{valid_htos}{(optional) a character vector of valid hto sequences. Default is NULL, which will use all sequences provided as rownames(mat).}

\item{use_median_cut}{a logical value indicating whether or not to use the median value of x to set a minimum threshold.}

\item{min_cut}{a numeric value for the minimum number of counts to consider for select_hash_cutoff(). Default is 10.}

\item{cutoff_vals}{(optional) a named numeric vector of cutoff values to apply. Length must be equal to nrow(mat), and names must exist in rownames(mat). Default is NULL, which will use select_hash_cutoff() to determine cutoff values.}

\item{expect_equal_loading}{a logical value indicating if equal loading is expected. This will try to correct overrepresented hashes only (not under-represented). Default is TRUE.}

\item{max_tries}{a numeric value indicating how many times to attempt adjustment if expect_equal_loading == TRUE to prevent runaway looping. Default is 5}
}
\value{
A list containing two objects:
\itemize{
  \item bmat: a binary sparse matrix (dgCMatrix) with dimensions equal to mat
  \item bsummary: a data.frame with summary values for each hash tag oligo: hash_barcode, cutoff, n_pos, n_neg, frac_pos, frac_neg
}
}
\description{
If cutoff values are provided, they will be used. If not, cutoffs will be determined
using select_hash_cutoff()
}
